version: '3.8'

services:
  # MongoDB Database
  mongodb:
    image: mongo:7.0
    container_name: ecom-mongodb
    restart: unless-stopped
    ports:
      - "27017:27017"
    environment:
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: password123
      MONGO_INITDB_DATABASE: ecom-multirole
    volumes:
      - mongodb_data:/data/db
      - ./server/scripts/mongo-init.js:/docker-entrypoint-initdb.d/mongo-init.js:ro
    networks:
      - ecom-network

  # Redis for caching and sessions
  redis:
    image: redis:7.2-alpine
    container_name: ecom-redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - ecom-network

  # Backend API Server
  server:
    build:
      context: ./server
      dockerfile: Dockerfile
    container_name: ecom-server
    restart: unless-stopped
    ports:
      - "5000:5000"
    environment:
      - NODE_ENV=development
      - PORT=5000
      - MONGODB_URI=mongodb://admin:password123@mongodb:27017/ecom-multirole?authSource=admin
      - REDIS_URL=redis://redis:6379
    volumes:
      - ./server:/app
      - /app/node_modules
    depends_on:
      - mongodb
      - redis
    networks:
      - ecom-network
    command: npm run dev

  # Frontend React App
  client:
    build:
      context: ./client
      dockerfile: Dockerfile
    container_name: ecom-client
    restart: unless-stopped
    ports:
      - "5173:5173"
    environment:
      - VITE_API_URL=http://localhost:5000/api/v1
      - VITE_STRIPE_PUBLISHABLE_KEY=pk_test_your_stripe_publishable_key
    volumes:
      - ./client:/app
      - /app/node_modules
    depends_on:
      - server
    networks:
      - ecom-network
    command: npm run dev

volumes:
  mongodb_data:
  redis_data:

networks:
  ecom-network:
    driver: bridge


